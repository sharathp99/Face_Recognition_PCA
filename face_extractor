'''import cv2
import os

# Load the group photo
group_photo_path = "C:\\Users\\shara\\OneDrive\\Desktop\\Final proj\\Grp Photo\\group_image.jpg"
group_photo = cv2.imread(group_photo_path)

# Check if the photo is loaded successfully
if group_photo is None:
    print("Error: Unable to load the group photo. Please check the file path.")
    exit()

# Initialize a face detection model
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Perform face detection
gray_photo = cv2.cvtColor(group_photo, cv2.COLOR_BGR2GRAY)
faces = face_cascade.detectMultiScale(gray_photo, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

# Create a directory to save individual faces
output_dir = "individual_faces"
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# Extract and save individual faces
for i, (x, y, w, h) in enumerate(faces):
    face = group_photo[y:y+h, x:x+w]
    cv2.imwrite(os.path.join(output_dir, f"face_{i}.jpg"), face)

print(f"{len(faces)} faces extracted and saved.")

'''

import cv2
import os

# Function to extract faces from a group photo and save them in a folder
def extract_faces(group_photo_path, output_dir):
    # Load the group photo
    group_photo = cv2.imread(group_photo_path)

    # Check if the photo is loaded successfully
    if group_photo is None:
        print(f"Error: Unable to load the group photo '{group_photo_path}'.")
        return

    # Initialize a face detection model
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

    # Perform face detection
    gray_photo = cv2.cvtColor(group_photo, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray_photo, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

    # Create a directory to save individual faces
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # Extract and save individual faces
    for i, (x, y, w, h) in enumerate(faces):
        face = group_photo[y:y+h, x:x+w]
        cv2.imwrite(os.path.join(output_dir, f"face_{i}.jpg"), face)

    print(f"{len(faces)} faces extracted and saved in '{output_dir}'.")

# Directory containing group photos
group_photos_dir = "C:\\Users\\shara\\OneDrive\\Desktop\\Final proj\\Grp Photo"

# Directory to store individual faces from each group photo
output_base_dir = "C:\\Users\\shara\\OneDrive\\Desktop\\Final proj\\individual_faces"

# Loop over each group photo
for filename in os.listdir(group_photos_dir):
    if filename.endswith(".jpg") or filename.endswith(".jpeg"):
        group_photo_path = os.path.join(group_photos_dir, filename)
        output_dir = os.path.join(output_base_dir, os.path.splitext(filename)[0])
        extract_faces(group_photo_path, output_dir)
        
